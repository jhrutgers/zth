name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-ubuntu:
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04]
        gcc: [9, 10, 11]
        cxx: [C++03, C++11, C++14, C++17]
        zmq: [zmq, nozmq]
        exclude:
          - os: ubuntu-20.04
            gcc: 11
    runs-on: ${{matrix.os}}
    env:
      CC: gcc-${{matrix.gcc}}
      CXX: g++-${{matrix.gcc}}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: bootstrap
        run: |
          dist/ubuntu/bootstrap.sh
          sudo apt install -y clang clang-tidy cppcheck
      - name: build Debug
        run: dist/ubuntu/build.sh Debug dev ${{matrix.cxx}} ${{matrix.zmq}} test
      - name: build Release
        run: |
          rm -rf dist/ubuntu/build
          dist/ubuntu/build.sh Release ${{matrix.cxx}} ${{matrix.zmq}} test

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        zmq: [ON, OFF]
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: bootstrap
        run: dist\win32\bootstrap.cmd
      - name: build Debug
        run: dist\win32\build.cmd Debug "-DZTH_TESTS=ON" "-DZTH_HAVE_LIBZMQ=${{matrix.zmq}}"
      - name: test
        run: cmake --build . --target=test
        working-directory: dist\win32\build
      - name: build Release
        run: |
          Remove-Item -path dist\win32\build -recurse -force
          dist\win32\build.cmd Release "-DZTH_TESTS=ON" "-DZTH_HAVE_LIBZMQ=${{matrix.zmq}}"
      - name: test
        run: cmake --build . --target=test
        working-directory: dist\win32\build

  build-mac:
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: bootstrap
        run: dist/macos/bootstrap.sh
      - name: build Debug
        run: dist/macos/build.sh Debug test
      - name: build Release
        run: |
          rm -rf dist/macos/build
          dist/macos/build.sh Release test

  build-arm-a15:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: bootstrap
        run: dist/qemu-arm-a15/bootstrap.sh
      - name: build Debug
        run: dist/qemu-arm-a15/build.sh Debug dev test
      - name: build Release
        run: |
          rm -rf dist/qemu-arm-a15/build
          dist/qemu-arm-a15/build.sh Release test

  build-arm-m3:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: bootstrap
        run: dist/qemu-arm-m3/bootstrap.sh
      - name: build Debug
        run: dist/qemu-arm-m3/build.sh Debug dev test
      - name: build Release
        run: |
          rm -rf dist/qemu-arm-m3/build
          dist/qemu-arm-m3/build.sh Release test

  build-mingw:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: bootstrap
        run: dist/mingw/bootstrap.sh
      - name: build Debug
        run: dist/mingw/build.sh Debug dev notest
      - name: build Release
        run: |
          rm -rf dist/mingw/build
          dist/mingw/build.sh Release

  documentation:
    if: github.ref == 'refs/heads/master'
    needs: [build-ubuntu, build-windows, build-mac, build-arm-a15, build-arm-m3, build-mingw]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: bootstrap
        run: dist/ubuntu/bootstrap.sh
      - name: build
        run: dist/ubuntu/build.sh -DZTH_DOCUMENTATION=ON
      - name: deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./doxygen/html

  test-documentation:
    if: github.ref != 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: bootstrap
        run: dist/ubuntu/bootstrap.sh
      - name: build
        run: dist/ubuntu/build.sh -DZTH_DOCUMENTATION=ON

  merge-status-check:
    if: github.ref != 'refs/heads/master'
    needs: [build-ubuntu, build-windows, build-mac, build-arm-a15, build-arm-m3, build-mingw, test-documentation]
    runs-on: ubuntu-latest
    steps:
      - name: accept
        run: echo OK
